{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red183\green111\blue179;\red23\green23\blue23;\red202\green202\blue202;
\red89\green138\blue67;\red194\green126\blue101;\red167\green197\blue152;\red212\green214\blue154;\red140\green211\blue254;
\red70\green137\blue204;\red67\green192\blue160;\red205\green173\blue106;}
{\*\expandedcolortbl;;\cssrgb\c77255\c52549\c75294;\cssrgb\c11765\c11765\c11765;\cssrgb\c83137\c83137\c83137;
\cssrgb\c41569\c60000\c33333;\cssrgb\c80784\c56863\c47059;\cssrgb\c70980\c80784\c65882;\cssrgb\c86275\c86275\c66667;\cssrgb\c61176\c86275\c99608;
\cssrgb\c33725\c61176\c83922;\cssrgb\c30588\c78824\c69020;\cssrgb\c84314\c72941\c49020;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl360\partightenfactor0

\f0\fs24 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 import\cf4 \strokec4  os\cb1 \
\cf2 \cb3 \strokec2 import\cf4 \strokec4  csv\cb1 \
\
\pard\pardeftab720\sl360\partightenfactor0
\cf5 \cb3 \strokec5 # Path to collect data from the Resources folder\cf4 \cb1 \strokec4 \
\cf5 \cb3 \strokec5 # PyPoll/election_data.csv\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl360\partightenfactor0
\cf4 \cb3 election_csv = os.path.join(\cf6 \strokec6 'Resources'\cf4 \strokec4 ,\cf6 \strokec6 'election_data.csv'\cf4 \strokec4 ).replace(\cf6 \strokec6 '/'\cf4 \strokec4 , \cf6 \strokec6 '//'\cf4 \strokec4 )\cb1 \
\
\pard\pardeftab720\sl360\partightenfactor0
\cf5 \cb3 \strokec5 # Creating an empty list by indexing the below:\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl360\partightenfactor0
\cf4 \cb3 candidate = []\cb1 \
\cb3 vote_count = []\cb1 \
\
\pard\pardeftab720\sl360\partightenfactor0
\cf5 \cb3 \strokec5 #For readability, it can help to assign your values to variables with descriptive names\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl360\partightenfactor0
\cf4 \cb3 count = \cf7 \strokec7 0\cf4 \cb1 \strokec4 \
\
\
\pard\pardeftab720\sl360\partightenfactor0
\cf2 \cb3 \strokec2 with\cf4 \strokec4  \cf8 \strokec8 open\cf4 \strokec4 (election_csv) \cf2 \strokec2 as\cf4 \strokec4  csv_file:\cb1 \
\pard\pardeftab720\sl360\partightenfactor0
\cf4 \cb3     csvreader = csv.reader(csv_file, \cf9 \strokec9 delimiter\cf4 \strokec4 =\cf6 \strokec6 ","\cf4 \strokec4 )\cb1 \
\cb3     csv_header = \cf8 \strokec8 next\cf4 \strokec4 (csvreader)\cb1 \
\cb3   \cb1 \
\cb3     \cf5 \strokec5 # Script to read through the rows\cf4 \cb1 \strokec4 \
\cb3     \cf2 \strokec2 for\cf4 \strokec4  row \cf2 \strokec2 in\cf4 \strokec4  csvreader:\cb1 \
\cb3         \cf2 \strokec2 if\cf4 \strokec4  row[\cf7 \strokec7 2\cf4 \strokec4 ] \cf10 \strokec10 not\cf4 \strokec4  \cf10 \strokec10 in\cf4 \strokec4  candidate:\cb1 \
\cb3             candidate.append(row[\cf7 \strokec7 2\cf4 \strokec4 ])\cb1 \
\cb3             vote_count.append(\cf11 \strokec11 int\cf4 \strokec4 (\cf7 \strokec7 1\cf4 \strokec4 ))\cb1 \
\cb3         \cf2 \strokec2 else\cf4 \strokec4 :\cb1 \
\cb3             count = candidate.index(row[\cf7 \strokec7 2\cf4 \strokec4 ])\cb1 \
\cb3             vote_count[count] = vote_count[count] + \cf7 \strokec7 1\cf4 \cb1 \strokec4 \
\cb3     \cb1 \
\cb3     \cf5 \strokec5 # Calculate the total vote\cf4 \cb1 \strokec4 \
\cb3     overall_votes = \cf8 \strokec8 sum\cf4 \strokec4 (vote_count)\cb1 \
\
\
\cb3     \cf5 \strokec5 # Max vote should return the winner\cf4 \cb1 \strokec4 \
\cb3     the_winner = vote_count.index(\cf8 \strokec8 max\cf4 \strokec4 (vote_count))\cb1 \
\
\cb3     \cf5 \strokec5 # Print data to terminal\cf4 \cb1 \strokec4 \
\cb3     \cf8 \strokec8 print\cf4 \strokec4 (\cf6 \strokec6 "Election Results"\cf4 \strokec4 )\cb1 \
\cb3     \cf8 \strokec8 print\cf4 \strokec4 (\cf6 \strokec6 "-------------------------------"\cf4 \strokec4 )\cb1 \
\cb3     \cf8 \strokec8 print\cf4 \strokec4 (\cf10 \strokec10 f\cf6 \strokec6 "Total Votes: \cf10 \strokec10 \{\cf4 \strokec4 overall_votes\cf10 \strokec10 \}\cf6 \strokec6 "\cf4 \strokec4 )\cb1 \
\cb3     \cf8 \strokec8 print\cf4 \strokec4 (\cf6 \strokec6 "-------------------------------"\cf4 \strokec4 )\cb1 \
\
\cb3     \cf5 \strokec5 #Loop through the data\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 # Looking to get the winner\cf4 \cb1 \strokec4 \
\cb3     \cf2 \strokec2 for\cf4 \strokec4  i \cf2 \strokec2 in\cf4 \strokec4  \cf8 \strokec8 range\cf4 \strokec4 (\cf8 \strokec8 len\cf4 \strokec4 (candidate)):\cb1 \
\cb3         name = candidate[i]\cb1 \
\cb3         percentage = vote_count[i]/overall_votes * \cf7 \strokec7 100\cf4 \cb1 \strokec4 \
\cb3         \cf8 \strokec8 print\cf4 \strokec4 (\cf10 \strokec10 f\cf6 \strokec6 "\cf10 \strokec10 \{\cf4 \strokec4 name\cf10 \strokec10 \}\cf6 \strokec6 : \cf10 \strokec10 \{\cf4 \strokec4 percentage\cf10 \strokec10 : .3f\}\cf6 \strokec6 % (\cf10 \strokec10 \{\cf4 \strokec4 vote_count[i]\cf10 \strokec10 \}\cf6 \strokec6 )"\cf4 \strokec4 )\cb1 \
\
\cb3     \cf8 \strokec8 print\cf4 \strokec4 (\cf6 \strokec6 "-------------------------------"\cf4 \strokec4 )\cb1 \
\cb3     \cf8 \strokec8 print\cf4 \strokec4 (\cf10 \strokec10 f\cf6 \strokec6 "Winner: \cf10 \strokec10 \{\cf4 \strokec4 candidate[the_winner]\cf10 \strokec10 \}\cf6 \strokec6 "\cf4 \strokec4 )\cb1 \
\cb3     \cf8 \strokec8 print\cf4 \strokec4 (\cf6 \strokec6 "-------------------------------"\cf4 \strokec4 )\cb1 \
\
\
\pard\pardeftab720\sl360\partightenfactor0
\cf5 \cb3 \strokec5 # Push data into file\cf4 \cb1 \strokec4 \
\cf5 \cb3 \strokec5 # This is the relative path "PyPoll/Analysis"\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl360\partightenfactor0
\cf2 \cb3 \strokec2 with\cf4 \strokec4  \cf8 \strokec8 open\cf4 \strokec4 (\cf6 \strokec6 "Analysis/Election_Analysis.txt"\cf4 \strokec4 , \cf6 \strokec6 'w'\cf4 \strokec4 ) \cf2 \strokec2 as\cf4 \strokec4  text:\cb1 \
\pard\pardeftab720\sl360\partightenfactor0
\cf4 \cb3     text.write(\cf6 \strokec6 "Election Results"\cf4 \strokec4 + \cf6 \strokec6 "\cf12 \strokec12 \\n\cf6 \strokec6 "\cf4 \strokec4 )\cb1 \
\cb3     text.write(\cf6 \strokec6 "-------------------------------\cf12 \strokec12 \\n\cf6 \strokec6 "\cf4 \strokec4 )\cb1 \
\cb3     text.write(\cf6 \strokec6 "Total Votes: "\cf4 \strokec4  + \cf11 \strokec11 str\cf4 \strokec4 (overall_votes) + \cf6 \strokec6 "\cf12 \strokec12 \\n\cf6 \strokec6 "\cf4 \strokec4 )\cb1 \
\cb3     text.write(\cf6 \strokec6 "-------------------------------\cf12 \strokec12 \\n\cf6 \strokec6 "\cf4 \strokec4 )\cb1 \
\cb3    \cb1 \
\cb3     \cf5 \strokec5 #Loop through the data\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 # Looking to get the winner\cf4 \cb1 \strokec4 \
\cb3     \cf2 \strokec2 for\cf4 \strokec4  i \cf2 \strokec2 in\cf4 \strokec4  \cf8 \strokec8 range\cf4 \strokec4 (\cf8 \strokec8 len\cf4 \strokec4 (candidate)):\cb1 \
\cb3         name = candidate[i]\cb1 \
\cb3         percentage = vote_count[i]/overall_votes * \cf7 \strokec7 100\cf4 \cb1 \strokec4 \
\cb3         text.write(\cf10 \strokec10 f\cf6 \strokec6 "\cf10 \strokec10 \{\cf4 \strokec4 name\cf10 \strokec10 \}\cf6 \strokec6 : \cf10 \strokec10 \{\cf4 \strokec4 percentage\cf10 \strokec10 : .3f\}\cf6 \strokec6 % (\cf10 \strokec10 \{\cf4 \strokec4 vote_count[i]\cf10 \strokec10 \}\cf6 \strokec6 )\cf12 \strokec12 \\n\cf6 \strokec6 "\cf4 \strokec4 )\cb1 \
\
\cb3     text.write(\cf6 \strokec6 "-------------------------------\cf12 \strokec12 \\n\cf6 \strokec6 "\cf4 \strokec4 )\cb1 \
\cb3     text.write(\cf10 \strokec10 f\cf6 \strokec6 "Winner: \cf10 \strokec10 \{\cf4 \strokec4 candidate[the_winner]\cf10 \strokec10 \}\cf12 \strokec12 \\n\cf6 \strokec6 "\cf4 \strokec4 )\cb1 \
\cb3     text.write(\cf6 \strokec6 "-------------------------------\cf12 \strokec12 \\n\cf6 \strokec6 "\cf4 \strokec4 )\cb1 \
\
\
}